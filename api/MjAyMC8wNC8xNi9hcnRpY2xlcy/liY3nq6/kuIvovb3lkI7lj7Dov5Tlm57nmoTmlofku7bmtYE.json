{"title":"前端下载后台返回的文件流","date":"2020-04-16T03:32:23.000Z","date_formatted":{"ll":"2020年4月16日","L":"2020/04/16","MM-DD":"04-16"},"author":"zao","link":"2020/04/16/articles/前端下载后台返回的文件流","tags":["项目经验"],"categories":["articles"],"updated":"2020-04-16T03:32:23.000Z","content":"<h2 id=\"问题\">问题<a href=\"#问题\" title=\"问题\"></a></h2><p>后台返回</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">content-disposition: attachment;filename=245484+%282%29.jpg</span><br><span class=\"line\">content-type: application/octet-stream</span><br></pre></td></tr></table></figure>\n\n<p>打开response为乱码</p>\n<h2 id=\"解决方法\">解决方法<a href=\"#解决方法\" title=\"解决方法\"></a></h2><ol><li><p>做响应拦截,判断当content-type为application/octet-stream,设置responseType为blob</p>\n<p>以umi-request为例</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 拦截响应</span></span><br><span class=\"line\">request.interceptors.response.use(<span class=\"keyword\">async</span> (response: Response, options: RequestOptionsInit) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (response.headers.get(<span class=\"string\">'Content-Type'</span>) === <span class=\"string\">'application/octet-stream'</span>) &#123;</span><br><span class=\"line\">    options.responseType=<span class=\"string\">'blob'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> response</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>封装download函数</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 下载文件</span></span><br><span class=\"line\"><span class=\"comment\">* @param content 文件流</span></span><br><span class=\"line\"><span class=\"comment\">* @param fileName 文件名称</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"> <span class=\"keyword\">export</span> <span class=\"keyword\">const</span> download = <span class=\"function\">(<span class=\"params\">content: <span class=\"built_in\">any</span>, fileName: <span class=\"built_in\">string</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> blob = <span class=\"keyword\">new</span> Blob([content], &#123;</span><br><span class=\"line\">     <span class=\"keyword\">type</span>: <span class=\"string\">'application/octet-stream'</span></span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\">   <span class=\"keyword\">const</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">   <span class=\"keyword\">const</span> url = <span class=\"built_in\">window</span>.URL.createObjectURL(blob);</span><br><span class=\"line\">   <span class=\"keyword\">const</span> filename = fileName;</span><br><span class=\"line\">   a.href = url;</span><br><span class=\"line\">   a.download = filename;</span><br><span class=\"line\">   a.click();</span><br><span class=\"line\">   <span class=\"built_in\">window</span>.URL.revokeObjectURL(url);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>请求，以umijs的useRequest为例</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> downloadFileR = useRequest(<span class=\"function\">(<span class=\"params\">meetingId, fileName</span>) =&gt;</span> downloadFile(meetingId, fileName), &#123;</span><br><span class=\"line\"> manual: <span class=\"literal\">true</span>,</span><br><span class=\"line\"> onSuccess: <span class=\"function\">(<span class=\"params\">result, params</span>) =&gt;</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (result.code &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">     message.error(result.message)</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     download(result, params[<span class=\"number\">1</span>])</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>其他的请求库和封装方式类似，不再举例</p>\n</li>\n</ol>","prev":{"title":"windows terminal加powershell7美化命令行操作","link":"2020/05/28/articles/windows-terminal加powershell7美化命令行操作"},"next":{"title":"vscode+wsl+windows terminal美化和搭建linux开发环境","link":"2020/03/11/articles/vscode-wsl-windows-terminal美化和搭建linux开发环境"},"plink":"https://www.hansomezao.com/2020/04/16/articles/前端下载后台返回的文件流/","toc":[{"id":"问题","title":"问题","index":"1"},{"id":"解决方法","title":"解决方法","index":"2"}],"reward":true,"copyright":{"custom":"转载请加上署名!"}}