{"title":"原md批量修改为hexo文章格式","date":"2020-03-02T09:12:33.000Z","date_formatted":{"ll":"2020年3月2日","L":"2020/03/02","MM-DD":"03-02"},"author":"zao","link":"2020/03/02/articles/原md批量修改为hexo文章格式","tags":["node"],"categories":["articles"],"updated":"2020-03-02T09:12:33.000Z","content":"<h2 id=\"需求\">需求<a href=\"#需求\" title=\"需求\"></a></h2><p>我想把以前收集的笔记和文章全部迁移到我的 hexo 博客下,一个个复制粘贴 front-matter 好麻烦哦,于是想到利用 node.js 批量生成</p>\n<h2 id=\"核心步骤\">核心步骤<a href=\"#核心步骤\" title=\"核心步骤\"></a></h2><p>挺简单的,也没什么好说的</p>\n<ol><li>读取源文件夹下的所有 md 文件</li>\n<li>循环遍历 md 文件执行<ul><li>读取文件信息</li>\n<li>生成摸板把信息嵌入进去</li>\n<li>读取源文件保存数据并在数据开头添加模板</li>\n<li>写入文件</li>\n</ul></li>\n</ol><h2 id=\"源代码\">源代码<a href=\"#源代码\" title=\"源代码\"></a></h2><figure class=\"highlight javascript\"><figcaption><span>mdToHexoPost.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 在md头部写入hexo文章信息</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> </span>sourceRoot 目标文件的根路径</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> </span>sourceFilePath 目标文件在根路径下的路径</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> </span>tag 文章标签</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">writeFileToLine</span>(<span class=\"params\">sourceRoot, targetRoot, sourceFilePath, tag</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> targetRootPath = path.join(targetRoot, <span class=\"string\">`copy/<span class=\"subst\">$&#123;sourceFilePath&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> filePath = path.join(sourceRoot, sourceFilePath);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fileInfo = <span class=\"keyword\">await</span> fs.statSync(filePath);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cTime = fileInfo.ctime</span><br><span class=\"line\">      .toLocaleString()</span><br><span class=\"line\">      .replace(<span class=\"string\">'T'</span>, <span class=\"string\">' '</span>)</span><br><span class=\"line\">      .slice(<span class=\"number\">0</span>, <span class=\"number\">19</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> title = sourceFilePath.slice(<span class=\"number\">0</span>, <span class=\"number\">-3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> template = <span class=\"string\">`---</span></span><br><span class=\"line\"><span class=\"string\">title: <span class=\"subst\">$&#123;title&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">date: <span class=\"subst\">$&#123;cTime&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">tags: <span class=\"subst\">$&#123;tag&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">category: note</span></span><br><span class=\"line\"><span class=\"string\">author: zao</span></span><br><span class=\"line\"><span class=\"string\">toc: true</span></span><br><span class=\"line\"><span class=\"string\">reward: false</span></span><br><span class=\"line\"><span class=\"string\">copyright: false</span></span><br><span class=\"line\"><span class=\"string\">---</span></span><br><span class=\"line\"><span class=\"string\">`</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = <span class=\"keyword\">await</span> fs.readFileSync(filePath, <span class=\"string\">'utf8'</span>).split(<span class=\"regexp\">/\\r\\n|\\n|\\r/gm</span>);</span><br><span class=\"line\">    data.splice(-data.length, <span class=\"number\">0</span>, template);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> fs.writeFileSync(targetRootPath, data.join(<span class=\"string\">'\\n'</span>));</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'失败'</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(error);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 循环生成post</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> </span>sourceRoot 源文件根路径</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> </span>targetRoot 目标文件根路径</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> </span>tag 文章tag</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">writeFileLoop</span>(<span class=\"params\">sourceRoot, targetRoot, tag</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// let root = __dirname;</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> targetDir = path.join(targetRoot, <span class=\"string\">'copy'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!fs.readdirSync(targetRoot).includes(<span class=\"string\">'copy'</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> fs.mkdirSync(targetDir);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> files = <span class=\"keyword\">await</span> fs.readdirSync(sourceRoot);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> mdList = files.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.match(<span class=\"regexp\">/(.*)\\.md/</span>));</span><br><span class=\"line\">  mdList.forEach(<span class=\"function\"><span class=\"params\">file</span> =&gt;</span> writeFileToLine(sourceRoot, targetRoot, file, tag));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">writeFileLoop(<span class=\"string\">'c:\\\\Users\\\\Administrator\\\\Desktop'</span>, __dirname, <span class=\"string\">'js'</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ps\">ps<a href=\"#ps\" title=\"ps\"></a></h2><p>核心思想挺简单的,具体情况还是要改哈代码,我只是根据我自己的情况这么写的,不过核心思想没变,😂</p>\n","prev":{"title":"hooks迁移-实现class中setState的效果","link":"2020/03/03/articles/hooks迁移-实现class中setState的效果"},"next":{"title":"hexo","link":"2020/02/29/note/hexo"},"plink":"https://www.hansomezao.com/2020/03/02/articles/原md批量修改为hexo文章格式/","toc":[{"id":"需求","title":"需求","index":"1"},{"id":"核心步骤","title":"核心步骤","index":"2"},{"id":"源代码","title":"源代码","index":"3"},{"id":"ps","title":"ps","index":"4"}],"reward":true,"copyright":{"custom":"转载请加上署名!"}}