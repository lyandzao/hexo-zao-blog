{"title":"01.React源码学习-createElement","date":"2019-11-25T03:25:29.000Z","date_formatted":{"ll":"2019年11月25日","L":"2019/11/25","MM-DD":"11-25"},"author":"zao","link":"2019/11/25/note/01-React源码学习-createElement","tags":["react源码"],"categories":["note"],"updated":"2019-11-25T03:25:29.000Z","content":"<h2 id=\"createelement\">createElement<a href=\"#createelement\" title=\"createElement\"></a></h2><p>平时我们在React组件内书写的JSX代码在编译时会被处理成如下:</p>\n<p><img src=\"https://s2.ax1x.com/2020/03/01/3gZOCd.png\" class=\"φcy\" alt=\"Event Loop\"></p>\n<p>此效果在 <a href=\"https://babeljs.io/repl/\" target=\"_blank\">Babel</a> 上实现。</p>\n<p>React.js内是如何引用createElement:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;首先引入</span><br><span class=\"line\">import &#123;</span><br><span class=\"line\">  createElement,</span><br><span class=\"line\">  createFactory,</span><br><span class=\"line\">  cloneElement,</span><br><span class=\"line\">  isValidElement,</span><br><span class=\"line\">&#125; from &#39;.&#x2F;ReactElement&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;应用</span><br><span class=\"line\">const React &#x3D; &#123;</span><br><span class=\"line\">  &#x2F;&#x2F; ...other props</span><br><span class=\"line\">  createElement: __DEV__ ? createElementWithValidation : createElement,</span><br><span class=\"line\">  cloneElement: __DEV__ ? cloneElementWithValidation : cloneElement,</span><br><span class=\"line\">  createFactory: __DEV__ ? createFactoryWithValidation : createFactory,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">export default React;</span><br></pre></td></tr></table></figure>\n\n<p>createElement代码在同级目录下 ReactElement.js 内：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function createElement(type, config, children) &#123;</span><br><span class=\"line\">  let propName;</span><br><span class=\"line\">  &#x2F;&#x2F; Reserved names are extracted</span><br><span class=\"line\">  const props &#x3D; &#123;&#125;;</span><br><span class=\"line\">  let key &#x3D; null;</span><br><span class=\"line\">  let ref &#x3D; null;</span><br><span class=\"line\">  let self &#x3D; null;</span><br><span class=\"line\">  let source &#x3D; null;</span><br><span class=\"line\">  &#x2F;&#x2F; 处理props</span><br><span class=\"line\">  if (config !&#x3D; null) &#123;</span><br><span class=\"line\">    if (hasValidRef(config)) &#123;</span><br><span class=\"line\">      ref &#x3D; config.ref;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (hasValidKey(config)) &#123;</span><br><span class=\"line\">      key &#x3D; &#39;&#39; + config.key;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    self &#x3D; config.__self &#x3D;&#x3D;&#x3D; undefined ? null : config.__self;</span><br><span class=\"line\">    source &#x3D; config.__source &#x3D;&#x3D;&#x3D; undefined ? null : config.__source;</span><br><span class=\"line\">    &#x2F;&#x2F; Remaining properties are added to a new props object</span><br><span class=\"line\">    for (propName in config) &#123;</span><br><span class=\"line\">      if (</span><br><span class=\"line\">        hasOwnProperty.call(config, propName) &amp;&amp;</span><br><span class=\"line\">        !RESERVED_PROPS.hasOwnProperty(propName)</span><br><span class=\"line\">      ) &#123;</span><br><span class=\"line\">        props[propName] &#x3D; config[propName];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#x2F;&#x2F; 处理多个children</span><br><span class=\"line\">  const childrenLength &#x3D; arguments.length - 2;</span><br><span class=\"line\">  if (childrenLength &#x3D;&#x3D;&#x3D; 1) &#123;</span><br><span class=\"line\">    props.children &#x3D; children;</span><br><span class=\"line\">  &#125; else if (childrenLength &gt; 1) &#123;</span><br><span class=\"line\">    const childArray &#x3D; Array(childrenLength);</span><br><span class=\"line\">    for (let i &#x3D; 0; i &lt; childrenLength; i++) &#123;</span><br><span class=\"line\">      childArray[i] &#x3D; arguments[i + 2];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (__DEV__) &#123;</span><br><span class=\"line\">      if (Object.freeze) &#123;</span><br><span class=\"line\">        Object.freeze(childArray);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    props.children &#x3D; childArray;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#x2F;&#x2F; defaultProps的处理</span><br><span class=\"line\">  if (type &amp;&amp; type.defaultProps) &#123;</span><br><span class=\"line\">    const defaultProps &#x3D; type.defaultProps;</span><br><span class=\"line\">    for (propName in defaultProps) &#123;</span><br><span class=\"line\">      if (props[propName] &#x3D;&#x3D;&#x3D; undefined) &#123;</span><br><span class=\"line\">        props[propName] &#x3D; defaultProps[propName];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  if (__DEV__) &#123;</span><br><span class=\"line\">    if (key || ref) &#123;</span><br><span class=\"line\">      const displayName &#x3D; typeof type &#x3D;&#x3D;&#x3D; &#39;function&#39; ? type.displayName || type.name || &#39;Unknown&#39; : type;</span><br><span class=\"line\">      if (key) &#123; defineKeyPropWarningGetter(props, displayName); &#125;</span><br><span class=\"line\">      if (ref) &#123; defineRefPropWarningGetter(props, displayName); &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return ReactElement(</span><br><span class=\"line\">    type,</span><br><span class=\"line\">    key,</span><br><span class=\"line\">    ref,</span><br><span class=\"line\">    self,</span><br><span class=\"line\">    source,</span><br><span class=\"line\">    ReactCurrentOwner.current,</span><br><span class=\"line\">    props,</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ReactElement通过createElement创建，调用该方法需要传入三个参数：</p>\n<ul><li>type (指代这个ReactElement的类型)</li>\n<li>config (ReactElement的属性)</li>\n<li>children (ReactElement的内容)</li>\n</ul><p>从如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (</span><br><span class=\"line\">  hasOwnProperty.call(config, propName) &amp;&amp;</span><br><span class=\"line\">  !RESERVED_PROPS.hasOwnProperty(propName)</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">  props[propName] &#x3D; config[propName];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;内嵌props</span><br><span class=\"line\">const RESERVED_PROPS &#x3D; &#123;</span><br><span class=\"line\">  key: true,</span><br><span class=\"line\">  ref: true,</span><br><span class=\"line\">  __self: true,</span><br><span class=\"line\">  __source: true,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>可以看出<code>key</code>,<code>ref</code>,<code>__self</code>,<code>__source</code>不会被复到元素的props上去</p>\n<p>createElement最后返回了一个ReactElement，ReactElement会返回一个对象代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const ReactElement &#x3D; function(type, key, ref, self, source, owner, props) &#123;</span><br><span class=\"line\">  const element &#x3D; &#123;</span><br><span class=\"line\">    &#x2F;&#x2F; This tag allows us to uniquely identify this as a React Element</span><br><span class=\"line\">    $$typeof: REACT_ELEMENT_TYPE,</span><br><span class=\"line\">    &#x2F;&#x2F; Built-in properties that belong on the element</span><br><span class=\"line\">    type: type,</span><br><span class=\"line\">    key: key,</span><br><span class=\"line\">    ref: ref,</span><br><span class=\"line\">    props: props,</span><br><span class=\"line\">    &#x2F;&#x2F; Record the component responsible for creating this element.</span><br><span class=\"line\">    _owner: owner,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  if (__DEV__) &#123;</span><br><span class=\"line\">    element._store &#x3D; &#123;&#125;;</span><br><span class=\"line\">    Object.defineProperty(element._store, &#39;validated&#39;, &#123;</span><br><span class=\"line\">      configurable: false,</span><br><span class=\"line\">      enumerable: false,</span><br><span class=\"line\">      writable: true,</span><br><span class=\"line\">      value: false,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    Object.defineProperty(element, &#39;_self&#39;, &#123;</span><br><span class=\"line\">      configurable: false,</span><br><span class=\"line\">      enumerable: false,</span><br><span class=\"line\">      writable: false,</span><br><span class=\"line\">      value: self,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    Object.defineProperty(element, &#39;_source&#39;, &#123;</span><br><span class=\"line\">      configurable: false,</span><br><span class=\"line\">      enumerable: false,</span><br><span class=\"line\">      writable: false,</span><br><span class=\"line\">      value: source,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    if (Object.freeze) &#123;</span><br><span class=\"line\">      Object.freeze(element.props);</span><br><span class=\"line\">      Object.freeze(element);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return element;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>ReactElement只是一个用来承载信息的容器，他会告诉后续的操作这个节点的以下信息：</p>\n<ul><li><code>type</code>类型，用于判断如何创建节点</li>\n<li><code>key</code>和<code>ref</code>这些特殊信息</li>\n<li><code>props</code>新的属性内容</li>\n<li><code>$$typeof</code> 用来标识element是什么类型,用于确定是否属于ReactElement</li>\n</ul>","prev":{"title":"02.React源码学习-component","link":"2019/11/26/note/02-React源码学习-component"},"next":{"title":"正则表达式","link":"2019/11/20/note/正则表达式"},"plink":"https://www.hansomezao.com/2019/11/25/note/01-React源码学习-createElement/","toc":[{"id":"createelement","title":"createElement","index":"1"}]}