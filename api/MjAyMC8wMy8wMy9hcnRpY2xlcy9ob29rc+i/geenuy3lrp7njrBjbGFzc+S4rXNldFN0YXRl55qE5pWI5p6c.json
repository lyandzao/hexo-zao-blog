{"title":"hooks迁移-实现class中setState的效果","date":"2020-03-03T10:07:26.000Z","date_formatted":{"ll":"2020年3月3日","L":"2020/03/03","MM-DD":"03-03"},"author":"zao","link":"2020/03/03/articles/hooks迁移-实现class中setState的效果","tags":["hooks"],"categories":["articles"],"updated":"2020-03-03T10:07:26.000Z","content":"<h1 id=\"hooks中实现class的setstate的效果\">hooks中实现class的setState的效果<a href=\"#hooks中实现class的setstate的效果\" title=\"hooks中实现class的setState的效果\"></a></h1><h2 id=\"问题\">问题<a href=\"#问题\" title=\"问题\"></a></h2><p>setState有回调函数，可以取得最新的state，而hooks的useState没有回调，不能立即取得最新值，这是由于useState的Capture value的特性造成的，网上解释挺多的，这里就不展开了。</p>\n<h2 id=\"解决方式\">解决方式<a href=\"#解决方式\" title=\"解决方式\"></a></h2><p>核心是通过ref来接收state，ref不受Capture value的影响且可以在作用域内访问</p>\n<h2 id=\"源码\">源码<a href=\"#源码\" title=\"源码\"></a></h2><h3 id=\"取得最新值\">取得最新值<a href=\"#取得最新值\" title=\"取得最新值\"></a></h3><p><a href=\"https://juejin.im/post/5d594ea5518825041301bbcb#heading-4\" target=\"_blank\">2019年了，整理了N个实用案例帮你快速迁移到React Hooks</a><br>整挺好的，我只用ts重写一遍，后面继续用</p>\n<figure class=\"highlight ts\"><figcaption><span>useRefState.ts</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  useState,</span><br><span class=\"line\">  useRef,</span><br><span class=\"line\">  useCallback,</span><br><span class=\"line\">  Dispatch,</span><br><span class=\"line\">  SetStateAction,</span><br><span class=\"line\">  MutableRefObject</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> useRefState=&lt;T&gt;(</span><br><span class=\"line\">  initialState: T | <span class=\"function\">(<span class=\"params\">(<span class=\"params\"></span>) =&gt; T</span>)</span></span><br><span class=\"line\"><span class=\"function\">): [<span class=\"params\">T</span>, <span class=\"params\">Dispatch</span>&lt;<span class=\"params\">SetStateAction</span>&lt;<span class=\"params\">T</span>&gt;&gt;, <span class=\"params\">MutableRefObject</span>&lt;<span class=\"params\">T</span>&gt;] &#123;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">const</span> <span class=\"params\">ins</span> = <span class=\"params\">useRef</span>&lt;<span class=\"params\">any</span>&gt;<span class=\"params\">()</span>;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">const</span> [<span class=\"params\">state</span>, <span class=\"params\">setState</span>] = <span class=\"params\">useState</span>(<span class=\"params\">(<span class=\"params\"></span>) =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    <span class=\"comment\">// 初始化</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    <span class=\"keyword\">const</span> value =</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">      <span class=\"keyword\">typeof</span> initialState === '<span class=\"keyword\">function</span>'</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">        ? (<span class=\"params\">initialState <span class=\"keyword\">as</span> (<span class=\"params\"></span>) =&gt; T</span>)(<span class=\"params\"></span>)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">        : initialState;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    ins.current = value;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    <span class=\"keyword\">return</span> value;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  &#125;</span>);</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">const</span> <span class=\"params\">setValue</span> = <span class=\"params\">useCallback</span>(<span class=\"params\">value =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    <span class=\"keyword\">if</span> (<span class=\"params\"><span class=\"keyword\">typeof</span> value === '<span class=\"keyword\">function</span>'</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">      setState(<span class=\"params\">prevState =&gt; &#123;</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">        <span class=\"keyword\">const</span> finalValue = value(<span class=\"params\">prevState</span>);</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">        ins.current = finalValue;</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">        <span class=\"keyword\">return</span> finalValue;</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">      &#125;</span>);</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    &#125; <span class=\"keyword\">else</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">      ins.current = value;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">      setState(<span class=\"params\">value</span>);</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  &#125;, []</span>);</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">return</span> [<span class=\"params\">state</span>, <span class=\"params\">setValue</span>, <span class=\"params\">ins</span>];</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">export</span> <span class=\"params\">default</span> <span class=\"params\">useRefState</span>;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"回调函数\">回调函数<a href=\"#回调函数\" title=\"回调函数\"></a></h3><p>结合上面的hooks</p>\n<figure class=\"highlight ts\"><figcaption><span>useCBState.ts</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useEffect, useRef, MutableRefObject &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> useRefState <span class=\"keyword\">from</span> <span class=\"string\">'./useRefState'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> useCBState = &lt;T&gt;(</span><br><span class=\"line\">  initState: T | <span class=\"function\">(<span class=\"params\">(<span class=\"params\"></span>) =&gt; T</span>)</span></span><br><span class=\"line\"><span class=\"function\">): [</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">T</span>,</span></span><br><span class=\"line\"><span class=\"function\">  (<span class=\"params\">state: T | (<span class=\"params\">(<span class=\"params\">prev: T</span>) =&gt; T</span>), cb: (<span class=\"params\"></span>) =&gt; <span class=\"built_in\">any</span></span>) =&gt;</span> <span class=\"built_in\">void</span>,</span><br><span class=\"line\">  MutableRefObject&lt;T|<span class=\"literal\">undefined</span>&gt;</span><br><span class=\"line\">] =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [state, setState, ins] = useRefState(initState);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> isUpdate = useRef&lt;<span class=\"built_in\">any</span>&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> setCBState = <span class=\"function\">(<span class=\"params\">state: T | (<span class=\"params\">(<span class=\"params\">prev: T</span>) =&gt; T</span>), cb: (<span class=\"params\"></span>) =&gt; <span class=\"built_in\">any</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    setState(<span class=\"function\"><span class=\"params\">prev</span> =&gt;</span> &#123;</span><br><span class=\"line\">      isUpdate.current = cb;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> state === <span class=\"string\">'function'</span></span><br><span class=\"line\">        ? <span class=\"function\">(<span class=\"params\">state <span class=\"keyword\">as</span> (<span class=\"params\">prev: T</span>) =&gt; T</span>)(<span class=\"params\">prev</span>)</span></span><br><span class=\"line\"><span class=\"function\">        : <span class=\"params\">state</span>;</span></span><br><span class=\"line\"><span class=\"function\">    &#125;);</span></span><br><span class=\"line\"><span class=\"function\">  &#125;;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">useEffect</span>(<span class=\"params\">(<span class=\"params\"></span>) =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    <span class=\"keyword\">if</span> (<span class=\"params\">isUpdate.current</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">      isUpdate.current(<span class=\"params\"></span>);</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  &#125;</span>);</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">return</span> [<span class=\"params\">state</span>, <span class=\"params\">setCBState</span>, <span class=\"params\">ins</span>];</span></span><br><span class=\"line\"><span class=\"function\">&#125;;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">export</span> <span class=\"params\">default</span> <span class=\"params\">useCBState</span>;</span></span><br></pre></td></tr></table></figure>\n\n<p>实际上，到这里差不多就完了，要完全实现setState的功能即在回调函数里取得最新值，也可以把最新值放到它的函数作用域内。</p>\n","prev":{"title":"vscode+wsl+windows terminal美化和搭建linux开发环境","link":"2020/03/11/articles/vscode-wsl-windows-terminal美化和搭建linux开发环境"},"next":{"title":"原md批量修改为hexo文章格式","link":"2020/03/02/articles/原md批量修改为hexo文章格式"},"plink":"https://www.hansomezao.com/2020/03/03/articles/hooks迁移-实现class中setState的效果/","toc":[{"id":"hooks中实现class的setstate的效果","title":"hooks中实现class的setState的效果","index":"1","children":[{"id":"问题","title":"问题","index":"1.1"},{"id":"解决方式","title":"解决方式","index":"1.2"},{"id":"源码","title":"源码","index":"1.3","children":[{"id":"取得最新值","title":"取得最新值","index":"1.3.1"},{"id":"回调函数","title":"回调函数","index":"1.3.2"}]}]}],"reward":true,"copyright":{"custom":"转载请加上署名!"}}