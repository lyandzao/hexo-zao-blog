{"title":"js常用小技巧","date":"2019-12-10T05:39:02.000Z","date_formatted":{"ll":"2019年12月10日","L":"2019/12/10","MM-DD":"12-10"},"author":"zao","link":"2019/12/10/note/js常用小技巧","tags":["js"],"categories":["note"],"updated":"2019-12-10T05:39:02.000Z","content":"<ul><li>小数取整：</li>\n</ul><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.234 | 0</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~1.234</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.234 &gt;&gt; 0</span><br></pre></td></tr></table></figure>\n\n<ul><li>妙用隐式转换：</li>\n</ul><blockquote>\n<p>字符串转number:</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+<span class=\"string\">'123'</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>new Date转时间戳：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+new Date()</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>数组/多维数组转为逗号分隔字符串(可用于多维数组转一维)：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"\"</span>+[1, 2 , 3, 3, [2, 3, 4]]</span><br></pre></td></tr></table></figure>\n\n<ul><li>解构：</li>\n</ul><blockquote>\n<p>交换a,b的值：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a=1;</span><br><span class=\"line\">var b=2;</span><br><span class=\"line\">[a, b] = [b, a];</span><br><span class=\"line\">console.log(a, b);</span><br></pre></td></tr></table></figure>\n\n<ul><li>扩展运算符：</li>\n</ul><blockquote>\n<p>取数组最大值/最小值：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Math.max(...[1,2,3])</span><br><span class=\"line\">Math.min(...[1,2,3])</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生成时间：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Date(...[2018,6,4])</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>字符串转数组：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">method 1: </span><br><span class=\"line\">[...<span class=\"string\">'string'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">method 2: </span><br><span class=\"line\">Array.from(<span class=\"string\">'string'</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>合并对象：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">let</span> obj1 = &#123;a:1, b:2&#125;;</span><br><span class=\"line\"><span class=\"built_in\">let</span> obj2 = &#123;b:3, c:4&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;...obj1, ...obj2&#125;</span><br><span class=\"line\">  等同于</span><br><span class=\"line\">Object.assign(obj1, obj2)</span><br></pre></td></tr></table></figure>\n\n<ul><li>常用方法：</li>\n</ul><blockquote>\n<p>数字前补0：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> preFixNum(num, length) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> (Array(length).join(<span class=\"string\">'0'</span>) + num).slice(-length);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>数组元素为对象的去重：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[...new Set(arr.map(v =&gt; JSON.stringify(v)))].map(v =&gt; JSON.parse(v))</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>数组求和：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [1,2,3,4,5];</span><br><span class=\"line\"></span><br><span class=\"line\">method 1: </span><br><span class=\"line\">var sum = <span class=\"built_in\">eval</span>(arr.join(<span class=\"string\">'+'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">method 2: </span><br><span class=\"line\">var sum = arr.reduce((prev,cur) =&gt; prev + cur);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>金钱格式化(千分)：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">let</span> money = 11111;</span><br><span class=\"line\"></span><br><span class=\"line\">method 1: </span><br><span class=\"line\">money.toLocaleString(<span class=\"string\">'en-US'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">method 2: </span><br><span class=\"line\">Intl.NumberFormat().format(money);</span><br><span class=\"line\"></span><br><span class=\"line\">method 3: </span><br><span class=\"line\">String(money).replace(/\\B(?=(\\d&#123;3&#125;)+(?!\\d))/g, <span class=\"string\">','</span>);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>短路逻辑代替if：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isTrue &amp;&amp; console.log(1);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>RGB to Hex：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> RGBtoHEX(rgb)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> ((1&lt;&lt;24) + (rgb.r&lt;&lt;16) + (rgb.g&lt;&lt;8) + rgb.b).toString(16).substr(1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>延时函数:</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const delay &#x3D; ms &#x3D;&gt; new Promise(resolve &#x3D;&gt; setTimeout(resolve, ms))</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生成指定长度数组：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.from(new Array(10).keys());</span><br></pre></td></tr></table></figure>\n<ul><li>正则进阶：</li>\n</ul><blockquote>\n<p>捕获括号：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">匹配 <span class=\"string\">'tigerHee'</span> 并且记住匹配项</span><br><span class=\"line\">/(tigerHee)/</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>非捕获括号：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">匹配 <span class=\"string\">'tigerHee'</span> 但是不记住匹配项</span><br><span class=\"line\">/(?:tigerHee)/</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>先行断言：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">匹配<span class=\"string\">'tiger'</span>仅仅当<span class=\"string\">'tiger'</span>后面跟着<span class=\"string\">'Hee'</span></span><br><span class=\"line\">/tiger(?=Hee)/</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>后行断言：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">匹配<span class=\"string\">'Hee'</span>仅仅当<span class=\"string\">'Hee'</span>前面是<span class=\"string\">'tiger'</span></span><br><span class=\"line\">/(?&lt;=tiger)Hee/</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>正向否定查找：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">匹配<span class=\"string\">'tiger'</span>仅仅当<span class=\"string\">'tiger'</span>后面不跟着<span class=\"string\">'java'</span></span><br><span class=\"line\">/tiger(?!java)/</span><br></pre></td></tr></table></figure>\n\n\n\n","prev":{"title":"05.redux-saga","link":"2019/12/10/note/05.redux-saga"},"next":{"title":"http常见消息头","link":"2019/12/06/note/http常见消息头"},"plink":"https://www.hansomezao.com/2019/12/10/note/js常用小技巧/"}