{"title":"docker安装和使用","date":"2020-07-10T03:48:33.000Z","date_formatted":{"ll":"2020年7月10日","L":"2020/07/10","MM-DD":"07-10"},"author":"zao","link":"2020/07/10/articles/docker安装和使用","tags":["docker"],"categories":["articles"],"updated":"2020-07-10T03:48:33.000Z","content":"<blockquote>\n<p>以下操作仅在ubnutu18.04以及wsl2环境下运行过</p>\n</blockquote>\n<h2 id=\"docker相关安装以及镜像源设置\">docker相关安装以及镜像源设置<a href=\"#docker相关安装以及镜像源设置\" title=\"docker相关安装以及镜像源设置\"></a></h2><h3 id=\"docker安装\">docker安装<a href=\"#docker安装\" title=\"docker安装\"></a></h3><p>脚本自动安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"docker-compose安装\">docker-compose安装<a href=\"#docker-compose安装\" title=\"docker-compose安装\"></a></h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加docker镜像源\">添加docker镜像源<a href=\"#添加docker镜像源\" title=\"添加docker镜像源\"></a></h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 这里改成你自己的加速地址就行了</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  \"registry-mirrors\": [\"https://klpsba92.mirror.aliyuncs.com\"]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用命令\">常用命令<a href=\"#常用命令\" title=\"常用命令\"></a></h2><h3 id=\"镜像\">镜像<a href=\"#镜像\" title=\"镜像\"></a></h3><ul><li><p>获取镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 拉取镜像</span></span><br><span class=\"line\">docker pull [image]:[version]</span><br><span class=\"line\">docker pull nginx:alpine</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看镜像信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 列出下载的镜像</span></span><br><span class=\"line\">docker images</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用tag可以为镜像添加tag，指向仍然是同一个镜像</span></span><br><span class=\"line\">docker tag [image]:[version] [target tag]:[version]</span><br><span class=\"line\">docker tag ubuntu:latest myubuntu:latest</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用inspect查看镜像详细信息</span></span><br><span class=\"line\">docker inspect [image]:[version]</span><br><span class=\"line\">docker inspect nginx:alpine</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>搜寻镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker search [image]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 删除镜像</span></span><br><span class=\"line\">docker rmi [options] [image]:[version]</span><br><span class=\"line\">docker rmi [options] [image id]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul><li>-f，-force：强制删除镜像，即使有容器依赖它；</li>\n<li>-no-prune：不要清理未带标签的父镜像</li>\n</ul></blockquote>\n</li>\n<li><p>清理镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 清除系统遗留的一些临时镜像文件，以及一些没有被使用的镜像</span></span><br><span class=\"line\">docker image [options] prune</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul><li>-a，-all：删除所有无用镜像，不光是临时镜像；</li>\n<li>-filter filter：只清理符合给定过滤器的镜像；</li>\n<li>-f，-force：强制删除镜像。</li>\n</ul></blockquote>\n</li>\n<li><p>创建镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 基于已有容器创建镜像</span></span><br><span class=\"line\">docker commit [options] [container]</span><br><span class=\"line\">docker commit -m \"init\" -a \"zao\" -p meeting-system</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 基于Dockerfile创建</span></span><br><span class=\"line\">docker build -t [image]:[version] .</span><br><span class=\"line\">docker build -t ms:1 .</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul><li>-a，–author=“”：作者信息；</li>\n<li>-c，–change=[]：提交的时候执行Dockerfile指令，包括CMD|ENTRYPOINT|ENV|EXPOSE|LABEL|ONBUILD|<br>USER|VOLUME|WORKDIR；</li>\n<li>-m，–message=“”：提交信息；</li>\n<li>-p，–pause=true：提交时暂停容器运行</li>\n</ul></blockquote>\n</li>\n<li><p>上传镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push [image]:[version]</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul><h3 id=\"容器\">容器<a href=\"#容器\" title=\"容器\"></a></h3><ul><li><p>列出容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps [options]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul><li><strong>-a :</strong>显示所有的容器，包括未运行的。</li>\n<li><strong>-f :</strong>根据条件过滤显示的内容。</li>\n<li><strong>–format :</strong>指定返回值的模板文件。</li>\n<li><strong>-l :</strong>显示最近创建的容器。</li>\n<li><strong>-n :</strong>列出最近创建的n个容器。</li>\n<li><strong>–no-trunc :</strong>不截断输出。</li>\n<li><strong>-q :</strong>静默模式，只显示容器编号。</li>\n<li><strong>-s :</strong>显示总的文件大小。</li>\n</ul></blockquote>\n</li>\n<li><p>新建容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建容器，此时容器处于停止状态，可以通过start启动</span></span><br><span class=\"line\">docker create [options] [image]:[version]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>与容器运行模式相关</strong></p>\n<ul><li>-a，–attach= [] 是否绑定到标准输人、输出和错误</li>\n<li>-d，–detach=true| false 是否在后台运行容器，默认为否</li>\n<li>–detach-keys=”” 从attach模式退出的快捷键</li>\n<li>–entrypoint=”” 镜像存在人口命令时，覆盖为新的命令</li>\n<li>– expose= [] 指定容器会暴露出来的端口或端口范围</li>\n<li>–group-add= [] 运行容器的用户组</li>\n<li>-i，– interactive=true| false 保持标准输人打开，默认为false</li>\n<li>–ipc=”” 容器IPC命名空间，可以为其他容器或主机</li>\n<li>– isolation= “default” 容器使用的隔离机制</li>\n<li>– log-driver= “json-file” 指定容器的日志驱动类型，可以为json-file、syslog、journald、gelf、fluentd、awslogs、splunk、etwlogs、gcplogs或none</li>\n<li>–log-opt=[] 传递给日志驱动的选项</li>\n<li>- -net= “bridge” 指定容器网络模式，包括bridge、none、 其他容器内网络、host 的网络或某个现有网络等</li>\n<li>–net-alias= [] 容器在网络中的别名</li>\n<li>-P，–publish-all=true | false 通过NAT机制将容器标记暴露的端口自动映射到本地主机的临时端口</li>\n<li>-p， –publish=[] 指定如何映射到本地主机端口，例如-p 11234-12234:1234-2234</li>\n<li>–pid=host 容器的PID命名空间</li>\n<li>–userns=”” 启用userns - remap时配置用户命名空间的模式</li>\n<li>–uts=host 容器的utS命名空间</li>\n<li>– restart= “no” 容器的重启策略，包括no、on- failure[:max-retry]、always、unless- stopped等</li>\n<li>– rm=true | false 容器退出后是否自动删除，不能跟-d同时使用</li>\n<li>-t，–tty=true | false 是否分配-一个伪终端，默认为false</li>\n<li>– tmpfs= [] 挂载临时文件系统到容器</li>\n<li>-v| –volume [= [ [HOST- DIR: ] CONTAINER -DIR [:OPTIONS]]] 挂载主机上的文件卷到容器内</li>\n<li>- -volume - driver=”” 挂载文件卷的驱动类型</li>\n<li>–volumes- from= [] 从其他容器挂载卷</li>\n<li>-W，–workdir= ”” 容器内的默认工作目录</li>\n</ul><hr>\n<p><strong>与容器环境和配置相关</strong></p>\n<ul><li>– add-host= [] 在容器内添加一个 主机名到IP地址的映射关 系(通过/etc/hosts 文件)</li>\n<li>– device= [] 映射物理机上的设备到容器内</li>\n<li>–dns - search= [] DNS搜索域</li>\n<li>–dns -opt= [] 自定义的DNS选项</li>\n<li>–dns= [] 自定义的DNS服务器</li>\n<li>-e，–env= [] 指定容器内环境变量</li>\n<li>–env-file= [] 从文件中读取环境变量到容器内</li>\n<li>-h，– hostname=” “ 指定容器内的主机名</li>\n<li>–name=” “ 指定容器的别名</li>\n</ul><hr>\n<p>与容器资源限制和安全保护相关</p>\n<ul><li>-U，–user=”” 指定在容器内执行命令的用户信息</li>\n<li>–userns=”” 指定用户命名空间</li>\n<li>–ulimit=[] 通过ulimit来限制最大文件数、最大进程数</li>\n</ul></blockquote>\n</li>\n<li><p>启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start [container]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动并运行容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run [options] [image]:[version]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看容器输出</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker logs [options] [container]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul><li>-details：打印详细信息；</li>\n<li>-f，-follow：持续保持输出；</li>\n<li>-since string：输出从某个时间开始的日志；</li>\n<li>-tail string：输出最近的若干日志；</li>\n<li>-t，-timestamps：显示时间戳信息；</li>\n<li>-until string：输出某个时间之前的日志；</li>\n</ul></blockquote>\n</li>\n<li><p>暂停容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pause [container]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>停止容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop [container]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>进入容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> attach命令docker attach [options] [container]</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul><li>–detach-keys[=[]]：指定退出attach模式的快捷键序列，默认是CTRL-p CTRL-q；</li>\n<li>–no-stdin=true|false：是否关闭标准输入，默认是保持打开；</li>\n<li>–sig-proxy=true|false：是否代理收到的系统信号给应用进程，默认是true。</li>\n</ul></blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">exec</span>命令</span></span><br><span class=\"line\">docker exec [options] [container]</span><br><span class=\"line\">docker exec -it 12kjhjasdasda /bin/bash</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul><li>-d，–detach：在容器中后台执行命令；</li>\n<li>–detach-keys=“”：指定将容器切回后台的按键；</li>\n<li>-e，–env=[]：指定环境变量列表；</li>\n<li>-i，–interactive=true|false：打开标准输入接受用户输入命令，默认值为false；</li>\n<li>–privileged=true|false：是否给执行命令以最高权限，默认值为false；</li>\n<li>-t，–tty=true|false：分配伪终端，默认值为false；</li>\n<li>-u，–user=“”：执行命令的用户名或ID。</li>\n</ul></blockquote>\n</li>\n<li><p>删除容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm [options] container</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul><li>-f，–force=false：是否强制终止并删除一个运行中的容器；</li>\n<li>-l，–link=false：删除容器的连接，但保留容器；</li>\n<li>-v，–volumes=false：删除容器挂载的数据卷。</li>\n</ul></blockquote>\n</li>\n<li><p>查看容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看容器详情</span></span><br><span class=\"line\">docker container inspect [container]</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看容器内进程</span></span><br><span class=\"line\">docker top [container]</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看统计信息</span></span><br><span class=\"line\">docker stats [container]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul><li>-a，-all：输出所有容器统计信息，默认仅在运行中；</li>\n<li>-format string：格式化输出信息；</li>\n<li>-no-stream：不持续输出，默认会自动更新持续实时结果；</li>\n<li>-no-trunc：不截断输出信息。</li>\n</ul></blockquote>\n</li>\n<li><p>复制文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp [path] [container]:[path]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看容器内文件系统的变更</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker container diff [container]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看端口映射</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker container port [container]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker update [options] [container]</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>","next":{"title":"liunx终端美化（ubuntu）","link":"2020/07/10/articles/liunx终端美化（ubuntu）"},"plink":"https://www.hansomezao.com/2020/07/10/articles/docker安装和使用/","toc":[{"id":"docker相关安装以及镜像源设置","title":"docker相关安装以及镜像源设置","index":"1","children":[{"id":"docker安装","title":"docker安装","index":"1.1"},{"id":"docker-compose安装","title":"docker-compose安装","index":"1.2"},{"id":"添加docker镜像源","title":"添加docker镜像源","index":"1.3"}]},{"id":"常用命令","title":"常用命令","index":"2","children":[{"id":"镜像","title":"镜像","index":"2.1"},{"id":"容器","title":"容器","index":"2.2"}]}],"reward":true,"copyright":{"custom":"转载请加上署名!"}}